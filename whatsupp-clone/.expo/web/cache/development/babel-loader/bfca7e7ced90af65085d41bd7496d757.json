{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TestesDev\\\\whatsupp-clone\\\\screens\\\\ChatsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ChatListItem from \"../components/ChatListItem\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport NewMessageButton from \"../components/NewMessageButton\";\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { getUser } from \"./queries\";\nexport default function ChatsScreen() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatRooms = _useState2[0],\n      setChatRooms = _useState2[1];\n\n  useEffect(function () {\n    var fetchChatRooms = function fetchChatRooms() {\n      var userInfo, userData;\n      return _regeneratorRuntime.async(function fetchChatRooms$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 3:\n              userInfo = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n                id: userInfo.attributes.sub\n              })));\n\n            case 6:\n              userData = _context.sent;\n              setChatRooms(userData.data.getUser.chatRoomUser.items);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    fetchChatRooms();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      width: '100%'\n    },\n    data: chatRooms,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ChatListItem, {\n        chatRoom: item.chatRoom,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 35\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(NewMessageButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/TestesDev/whatsupp-clone/screens/ChatsScreen.tsx"],"names":["React","useEffect","useState","ChatListItem","NewMessageButton","API","graphqlOperation","Auth","getUser","ChatsScreen","chatRooms","setChatRooms","fetchChatRooms","currentAuthenticatedUser","userInfo","graphql","id","attributes","sub","userData","data","chatRoomUser","items","console","log","styles","container","width","item","chatRoom","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,OAAOC,YAAP;;;AAIA,OAAOC,gBAAP;AAEA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,IAAhC,QAA4C,aAA5C;AACA,SAASC,OAAT;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAAA,kBAEFP,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,MAE7BQ,SAF6B;AAAA,MAElBC,YAFkB;;AAIpCV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEIL,IAAI,CAACM,wBAAL,EAFJ;;AAAA;AAEbC,cAAAA,QAFa;AAAA;AAAA,+CAIIT,GAAG,CAACU,OAAJ,CACrBT,gBAAgB,CACdE,OADc,EACL;AACPQ,gBAAAA,EAAE,EAAEF,QAAQ,CAACG,UAAT,CAAoBC;AADjB,eADK,CADK,CAJJ;;AAAA;AAIbC,cAAAA,QAJa;AAYrBR,cAAAA,YAAY,CAACQ,QAAQ,CAACC,IAAT,CAAcZ,OAAd,CAAsBa,YAAtB,CAAmCC,KAApC,CAAZ;AAZqB;AAAA;;AAAA;AAAA;AAAA;AAenBC,cAAAA,OAAO,CAACC,GAAR;;AAfmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AAkBAZ,IAAAA,cAAc;AACf,GApBQ,EAoBN,EApBM,CAAT;AAuBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KADT;AAEE,IAAA,IAAI,EAAEjB,SAFR;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGkB,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAEA,IAAI,CAACC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAHd;AAIE,IAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,aAAUA,IAAI,CAACZ,EAAf;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD;AAED,IAAMS,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport ChatListItem from '../components/ChatListItem';\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View, FlatList } from 'react-native';\nimport chatRooms from '../data/ChatRooms'\nimport NewMessageButton from '../components/NewMessageButton';\n\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { getUser } from \"./queries\";\n\nexport default function ChatsScreen() {\n\n  const [chatRooms, setChatRooms] = useState([]);\n\n  useEffect(() => {\n    const fetchChatRooms = async () => {\n      try {\n        const userInfo = await Auth.currentAuthenticatedUser();\n\n        const userData = await API.graphql(\n          graphqlOperation(\n            getUser, {\n              id: userInfo.attributes.sub\n            }\n          )\n        )\n\n      setChatRooms(userData.data.getUser.chatRoomUser.items);\n\n      } catch(e) {\n        console.log(e);\n      }\n    }\n    fetchChatRooms();\n  }, []);\n\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        style={{width: '100%'}}\n        data={chatRooms}\n        renderItem={({ item }) => <ChatListItem chatRoom={item.chatRoom}/>}\n        keyExtractor={(item) => item.id}\n      />\n      <NewMessageButton />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}