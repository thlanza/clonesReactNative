{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\TestesDev\\\\whatsupp-clone\\\\components\\\\ContactListItem\\\\index.tsx\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styles from \"./style\";\nimport { useNavigation } from '@react-navigation/native';\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\nimport { createChatRoom, createChatRoomUser } from \"../../graphql/mutations\";\n\nvar ContactListItem = function ContactListItem(props) {\n  var user = props.user;\n  var navigation = useNavigation();\n\n  var onClick = function onClick() {\n    var newChatRoomData, newChatRoom, userInfo;\n    return _regeneratorRuntime.async(function onClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoom, {\n              input: {\n                lastMessageID: \"zz7534fcahjhjfhkjfefihwuiwuifhwfiwf\"\n              }\n            })));\n\n          case 3:\n            newChatRoomData = _context.sent;\n\n            if (!newChatRoomData.data) {\n              console.log(\"Falha ao criar uma sala de chat.\");\n            }\n\n            newChatRoom = newChatRoomData.data.createChatRoom;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: user.id,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 10:\n            userInfo = _context.sent;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: userInfo.attributes.sub,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 13:\n            navigation.navigate('ChatRoom', {\n              id: newChatRoom.id,\n              name: \"Hardcoded name\"\n            });\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 16]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.leftContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: user.imageUri\n    },\n    style: styles.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.midContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, user.name)))));\n};\n\nexport default ContactListItem;","map":{"version":3,"sources":["C:/TestesDev/whatsupp-clone/components/ContactListItem/index.tsx"],"names":["React","styles","useNavigation","API","Auth","graphqlOperation","createChatRoom","createChatRoomUser","ContactListItem","props","user","navigation","onClick","graphql","input","lastMessageID","newChatRoomData","data","console","log","newChatRoom","userID","id","chatRoomID","currentAuthenticatedUser","userInfo","attributes","sub","navigate","name","container","leftContainer","uri","imageUri","avatar","midContainer","username"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View, Image, TouchableWithoutFeedback } from \"react-native\";\r\nimport { User } from '../../types';\r\nimport styles from './style';\r\nimport moment from 'moment';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {  createChatRoom, createChatRoomUser } from \"../../graphql/mutations\";\r\n\r\nexport type ContactListItemProps = {\r\n    user: User;\r\n}\r\n\r\nconst ContactListItem = (props: ContactListItemProps) => {\r\n    const { user } = props;\r\n\r\n    const navigation = useNavigation();\r\n\r\n \r\n\r\n    const onClick = async () => {\r\n        // navigate to chat room with this user\r\n        try {\r\n            // 1.Create a new Chat Room\r\n            const newChatRoomData = await API.graphql(\r\n                graphqlOperation(\r\n                    createChatRoom, {\r\n                        input: {\r\n                            lastMessageID: \"zz7534fcahjhjfhkjfefihwuiwuifhwfiwf\"\r\n                         }\r\n                    }\r\n                )\r\n            )\r\n\r\n            if (!newChatRoomData.data) {\r\n                console.log(\"Falha ao criar uma sala de chat.\")\r\n            }\r\n\r\n            const newChatRoom = newChatRoomData.data.createChatRoom;\r\n            \r\n            // 2.Add `user` to the Chat Room\r\n            await API.graphql(\r\n                graphqlOperation(\r\n                    createChatRoomUser, {\r\n                        input: {\r\n                            userID: user.id,\r\n                            chatRoomID: newChatRoom.id\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n\r\n            const userInfo = await Auth.currentAuthenticatedUser();\r\n            await API.graphql(\r\n                graphqlOperation(\r\n                    createChatRoomUser, {\r\n                        input: {\r\n                            userID: userInfo.attributes.sub,\r\n                            chatRoomID: newChatRoom.id\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n\r\n            navigation.navigate('ChatRoom', { \r\n                id: newChatRoom.id,\r\n                name: \"Hardcoded name\"\r\n            });\r\n\r\n           \r\n\r\n\r\n            // 3.Add authenticated user to the Chat Room\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={onClick}>\r\n            <View style={styles.container}>\r\n                <View style={styles.leftContainer}>\r\n                    <Image source={{ uri: user.imageUri }} style={styles.avatar} />\r\n                    <View style={styles.midContainer}>\r\n                        <Text style={styles.username}>{user.name}</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n\r\n    )\r\n};\r\n\r\nexport default ContactListItem;"]},"metadata":{},"sourceType":"module"}