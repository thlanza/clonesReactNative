{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TestesDev\\\\whatsupp-clone\\\\screens\\\\ContactsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ContactListItem from \"../components/ContactListItem\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { listUsers } from \"../graphql/queries\";\nexport default function ContactsScreen() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    var fetchUsers = function fetchUsers() {\n      var usersData;\n      return _regeneratorRuntime.async(function fetchUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listUsers)));\n\n            case 3:\n              usersData = _context.sent;\n              setUsers(usersData.data.listUsers.items);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    fetchUsers();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      width: '100%'\n    },\n    data: users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ContactListItem, {\n        user: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 35\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/TestesDev/whatsupp-clone/screens/ContactsScreen.tsx"],"names":["React","useEffect","useState","ContactListItem","API","graphqlOperation","listUsers","ContactsScreen","users","setUsers","fetchUsers","graphql","usersData","data","items","console","log","styles","container","width","item","id","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAMA,OAAOC,eAAP;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,SAAT;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAAA,kBAEbL,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,MAEhCM,KAFgC;AAAA,MAEzBC,QAFyB;;AAIvCR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAESN,GAAG,CAACO,OAAJ,CACtBN,gBAAgB,CACdC,SADc,CADM,CAFT;;AAAA;AAETM,cAAAA,SAFS;AAOfH,cAAAA,QAAQ,CAACG,SAAS,CAACC,IAAV,CAAeP,SAAf,CAAyBQ,KAA1B,CAAR;AAPe;AAAA;;AAAA;AAAA;AAAA;AASfC,cAAAA,OAAO,CAACC,GAAR;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAYAN,IAAAA,UAAU;AACX,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KADT;AAEE,IAAA,IAAI,EAAEX,KAFR;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGY,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAHd;AAIE,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAf;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport ChatListItem from '../components/ChatListItem';\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\nimport { Text, View, FlatList } from 'react-native';\r\nimport NewMessageButton from '../components/NewMessageButton';\r\nimport ContactListItem from '../components/ContactListItem';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport { listUsers } from '../graphql/queries';\r\n\r\nexport default function ContactsScreen() {\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const usersData = await API.graphql(\r\n          graphqlOperation(\r\n            listUsers\r\n          )\r\n        )\r\n        setUsers(usersData.data.listUsers.items);\r\n      } catch(e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, [])\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        style={{width: '100%'}}\r\n        data={users}\r\n        renderItem={({ item }) => <ContactListItem user={item}/>}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}